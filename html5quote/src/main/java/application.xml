<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">  
	    <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
	    <property name="url"  value="jdbc:mysql://localhost:3306/futures_quote?useUnicode=true&amp;characterEncoding=utf8" />  
	    <property name="username" value="root" />  
	    <property name="password" value="123456"/>
	</bean>  
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
			    <!-- 数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop><!-- 二级缓存 -->
				<prop key="hibernate.cache.provider_class">
					com.opensymphony.oscache.hibernate.OSCacheProvider
                </prop>
                <prop key="generate_statistics">true</prop>
			</props>
		</property>
		
		<property name="annotatedClasses">
			<list>
				
			</list>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 定义事务管理器（声明式的事务） -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- get/load/find开头的方法只读事务,其它为新事物 -->
			<tx:method name="get*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="*" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.venus.finance..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="interceptorPointCuts" />
	</aop:config>

</beans>